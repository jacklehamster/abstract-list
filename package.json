{
  "name": "abstract-list",
  "module": "src/index.ts",
  "description": "Provide an interface for abstract lists. An abstract list behaves like a read-only array, but without storage. It can virtually store an infinite number of elements. It's meant for working flexibly with arrays. Regular arrays can be used as abstract lists as well.",
  "version": "1.0.15",
  "keywords": [
    "bun",
    "bunjs",
    "typescript",
    "list",
    "abstract",
    "virtual",
    "infinite"
  ],
  "repository": {
    "type": "git",
    "url": "git@github.com:jacklehamster/abstract-list.git"
  },
  "homepage": "https://jacklehamster.github.io/abstract-list/",
  "author": {
    "name": "Jack Le Hamster",
    "email": "jacklehamster@gmail.com"
  },
  "license": "MIT",
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "engines": {
    "node": ">=14.0.0"
  },
  "scripts": {
    "test": "bun test",
    "build": "bun i && rm -rf *.tsbuildinfo && rm -rf dist/*.* && bun run bundler/bundler.ts && bun run test && bun run build:declaration",
    "build:declaration": "tsc --emitDeclarationOnly --project tsconfig.types.json",
    "auto-publish": "npm explore @dobuki/auto-publish -- bun run auto-publish \"$(pwd)\""
  },
  "publishConfig": {
    "access": "public"
  },
  "files": [
    "dist"
  ],
  "devDependencies": {
    "@dobuki/dev-dependencies": "^1.0.6"
  },
  "peerDependencies": {
    "typescript": "^5.0.0"
  },
  "dependencies": {
    "dok-types": "^1.0.9"
  }
}
